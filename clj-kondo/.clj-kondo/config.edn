{:skip-comments true
 :config-paths ["nubank/state-flow" "nubank/common-datomic" "nubank/common-metrics"]
 :linters {:refer-all         {:exclude [clojure.test midje.sweet]}
           :unresolved-symbol {:level   :error
                               :exclude [fact
                                         facts
                                         =>
                                         provided
                                         tabular
                                         against-background
                                         (midje.sweet/fact)
                                         (midje.sweet/facts)
                                         (midje.parsing.arrow-symbols/=>)]}}
 :hooks   {:analyze-call {postman.aux.init/defflow   nubank.state-flow/defflow
                          integration.aux.init/defflow   nubank.state-flow/defflow}}
 :lint-as {bonafont.logic.flow-edge/def                   clojure.core/def
           bonafont.logic.flow-edge/defedge               clojure.core/def
           bonafont.logic.flow-config/defflow             clojure.core/def
           bonafont.logic.flow-config/def                 clojure.core/def
           bonafont.flows.debit-request.edges/def-edge    clojure.core/def
           common-test.postman.helpers.core/defstep       clojure.core/defn
           common-graphql.lacinia.sweet/defresolver       clojure.core/def
           common-graphql.lacinia.sweet/defmutation       clojure.core/def
           common-graphql.lacinia.sweet/definterface      clojure.core/def
           common-graphql.lacinia.sweet/defobject         clojure.core/def
           common-graphql.lacinia.sweet/defscalar         clojure.core/def
           common-graphql.lacinia.sweet/defunion          clojure.core/def
           common-graphql.lacinia.sweet/definput          clojure.core/def
           common-graphql.lacinia.sweet/defenum           clojure.core/def
           schema.experimental.abstract-map/extend-schema clojure.core/def
           postman.aux.helpers/defaction                  clojure.core/defn
           rewrite-clj.zip/edit->                         clojure.core/->
           rewrite-clj.zip.subedit/edit->                 clojure.core/->}}
